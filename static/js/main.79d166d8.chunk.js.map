{"version":3,"sources":["ParticlesContainer.js","Home.js","Resume.js","App.js","serviceWorker.js","index.js"],"names":["canvasStyle","css","_templateObject","ParticlesContainer","props","Object","core_browser_esm","_templateObject2","particles_default","a","params","particles","number","value","density","enable","value_area","color","shape","type","stroke","width","polygon","nb_sides","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","resize","modes","repulse","duration","push","particles_nb","remove","retina_detect","children","rootStyle","Home_templateObject","parentLinksStyle","Home_templateObject2","linkStyle","_templateObject3","content","class","description","link","getLinkList","icons","_templateObject4","href","className","_templateObject5","react_router_dom","_templateObject6","to","_templateObject7","Home","links","map","index","react_default","Fragment","key","_templateObject8","_templateObject9","Resume_templateObject","backStyle","Resume_templateObject2","experience","company","location","position","workDates","achievements","projects","name","stack","ResumeSection","Resume_templateObject3","Resume_templateObject4","sectionTitle","Resume","Resume_templateObject5","Resume_templateObject6","Resume_templateObject7","Resume_templateObject8","Resume_templateObject9","_templateObject10","_templateObject11","App_templateObject","App","src_ParticlesContainer","basename","react_router","exact","from","path","component","Boolean","window","hostname","match","ReactDOM","render","createElement","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+fAKA,IAAMA,EAAcC,YAAHC,KA4GFC,MAnGf,SAA4BC,GACxB,OACIC,OAAAC,EAAA,EAAAD,CAAA,OAAKJ,IAAKA,YAAFM,MACJF,OAAAC,EAAA,EAAAD,CAACG,EAAAC,EAAD,CACIR,IAAKD,EACLU,OAAQ,CACJC,UAAa,CACTC,OAAU,CACNC,MAAS,GACTC,QAAW,CACPC,QAAU,EACVC,WAAc,MAGtBC,MAAS,CACLJ,MAAS,WAEbK,MAAS,CACLC,KAAQ,SACRC,OAAU,CACNC,MAAS,EACTJ,MAAS,WAEbK,QAAW,CACPC,SAAY,IAGpBC,QAAW,CACPX,MAAS,GACTY,QAAU,EACVC,KAAQ,CACJX,QAAU,EACVY,MAAS,EACTC,YAAe,GACfC,MAAQ,IAGhBC,KAAQ,CACJjB,MAAS,EACTY,QAAU,EACVC,KAAQ,CACJX,QAAU,EACVY,MAAS,GACTI,SAAY,GACZF,MAAQ,IAGhBG,YAAe,CACXjB,QAAU,EACVkB,SAAY,GACZhB,MAAS,UACTO,QAAW,GACXH,MAAS,GAEba,KAAQ,CACJnB,QAAU,EACVY,MAAS,EACTQ,UAAa,OACbV,QAAU,EACVW,UAAY,EACZC,SAAY,MACZC,QAAU,EACVC,QAAW,CACPxB,QAAU,EACVyB,QAAW,IACXC,QAAW,QAIvBC,cAAiB,CACbC,UAAa,SACbC,OAAU,CACNC,QAAW,CACP9B,QAAU,EACV+B,KAAQ,WAEZC,QAAU,GAEdC,MAAS,CACLC,QAAW,CACPhB,SAAY,IACZiB,SAAY,IAEhBC,KAAQ,CACJC,aAAgB,GAEpBC,OAAU,CACND,aAAgB,KAI5BE,eAAiB,KAGxBlD,EAAMmD,o3CCvGnB,IAAMC,EAAYvD,YAAHwD,KAYTC,EAAmBzD,YAAH0D,KAShBC,EAAY3D,YAAH4D,KAQTC,EAAU,CAAC,CACbC,MAAO,gBACPC,YAAa,SACbC,KAAM,+BACP,CACCF,MAAM,qBACNC,YAAa,WACbC,KAAM,gDACP,CACCF,MAAO,cACPC,YAAa,SACbC,KAAM,KAGJC,EAAc,SAACC,GACjB,MAAkB,KAAfA,EAAMF,KAED5D,OAAAC,EAAA,EAAAD,CAAA,KACIJ,IAAKA,YAAFmE,KAIHC,KAAMF,EAAMF,MACZ5D,OAAAC,EAAA,EAAAD,CAAA,OAAKJ,IAAK2D,GACNvD,OAAAC,EAAA,EAAAD,CAAA,KAAGiE,UAAWH,EAAMJ,QACpB1D,OAAAC,EAAA,EAAAD,CAAA,QAAMJ,IAAKA,YAAFsE,MAA0BJ,EAAMH,eAMjD3D,OAAAC,EAAA,EAAAD,CAACmE,EAAA,EAAD,CACIvE,IAAKA,YAAFwE,KAIHC,GAAG,WACHrE,OAAAC,EAAA,EAAAD,CAAA,OAAKJ,IAAK2D,GACNvD,OAAAC,EAAA,EAAAD,CAAA,KAAGiE,UAAWH,EAAMJ,QACpB1D,OAAAC,EAAA,EAAAD,CAAA,QAAMJ,IAAKA,YAAF0E,MAA0BR,EAAMH,gBA0B9CY,MAlBf,WACI,IAAIC,EAAQf,EAAQgB,IAAI,SAACjE,EAAOkE,GAAR,OACpB1E,OAAAC,EAAA,EAAAD,CAAC2E,EAAAvE,EAAMwE,SAAP,CAAgBC,IAAKH,GAChBb,EAAYrD,MAIrB,OACIR,OAAAC,EAAA,EAAAD,CAAA,OAAKJ,IAAKuD,GACNnD,OAAAC,EAAA,EAAAD,CAAA,QAAMJ,IAAKA,YAAFkF,MAAT,0BACA9E,OAAAC,EAAA,EAAAD,CAAA,MAAIJ,IAAKA,YAAFmF,MAAP,mBACA/E,OAAAC,EAAA,EAAAD,CAAA,OAAKJ,IAAKyD,GACLmB,EAAMC,IAAI,SAACjE,GAAD,OAAWA,q2DCxFtC,IAAM2C,EAAYvD,YAAHoF,KAaTC,EAAYrF,YAAHsF,KASTC,EAAa,CAAC,CAChBC,QAAS,sBACTC,SAAU,aACVC,SAAU,8BACVC,UAAW,sBACXC,aAAc,CACV,2JACA,8GACA,6FACA,2HACA,sFACA,qDACA,oCAEL,CACCJ,QAAS,0BACTC,SAAU,cACVC,SAAU,2BACVC,UAAW,sBACXC,aAAc,CACV,2GACA,+DACA,+JACA,6LACA,0NAEL,CACCJ,QAAS,qBACTC,SAAU,iBACVC,SAAU,2BACVC,UAAW,sBACXC,aAAc,CACV,4HACA,6EACA,gJACA,6EAIFC,EAAW,CAAC,CACdC,KAAM,mBACNC,MAAO,0BACPhC,YAAW,wSAIZ,CACC+B,KAAM,SACNC,MAAO,wDACPhC,YAAW,uQAMf,SAASiC,EAAc7F,GACnB,OACIC,OAAAC,EAAA,EAAAD,CAAA,OAAKJ,IAAKA,YAAFiG,MACJ7F,OAAAC,EAAA,EAAAD,CAAA,MAAIJ,IAAKA,YAAFkG,MACE/F,EAAMgG,cAEdhG,EAAMmD,UA2EJ8C,MAtEf,SAAgBjG,GACZ,OACIC,OAAAC,EAAA,EAAAD,CAAA,OAAKJ,IAAKuD,GACNnD,OAAAC,EAAA,EAAAD,CAAA,OAAKJ,IAAKA,YAAFqG,MACJjG,OAAAC,EAAA,EAAAD,CAACmE,EAAA,EAAD,CAAME,GAAG,QAAQzE,IAAKqF,GAClBjF,OAAAC,EAAA,EAAAD,CAAA,KAAGiE,UAAU,uBAGjBjE,OAAAC,EAAA,EAAAD,CAAA,OAAKJ,IAAKA,YAAFsG,MACJlG,OAAAC,EAAA,EAAAD,CAAA,MAAIJ,IAAKA,YAAFuG,MAAP,WACYnG,OAAAC,EAAA,EAAAD,CAAA,qBAEZA,OAAAC,EAAA,EAAAD,CAAA,YAAMA,OAAAC,EAAA,EAAAD,CAAA,KAAGJ,IAAKA,YAAFwG,MAAN,qBAAN,yBAEJpG,OAAAC,EAAA,EAAAD,CAAA,OAAKJ,IAAKA,YAAFyG,QAEZrG,OAAAC,EAAA,EAAAD,CAAC4F,EAAD,CAAeG,aAAa,aACpB/F,OAAAC,EAAA,EAAAD,CAAA,MAAIJ,IAAKA,YAAF0G,MAAP,wEACAtG,OAAAC,EAAA,EAAAD,CAAA,wDAAmDA,OAAAC,EAAA,EAAAD,CAAA,cAAnD,IAA4DA,OAAAC,EAAA,EAAAD,CAAA,0BAA5D,cAA2FA,OAAAC,EAAA,EAAAD,CAAA,cAA3F,IAAoGA,OAAAC,EAAA,EAAAD,CAAA,oBAApG,cACAA,OAAAC,EAAA,EAAAD,CAAA,UACIA,OAAAC,EAAA,EAAAD,CAAA,2DAGZA,OAAAC,EAAA,EAAAD,CAAC4F,EAAD,CAAeG,aAAa,cACvBZ,EAAWV,IAAI,SAACjE,EAAOkE,GAAR,OACR1E,OAAAC,EAAA,EAAAD,CAAC2E,EAAAvE,EAAMwE,SAAP,CAAgBC,IAAKH,GACjB1E,OAAAC,EAAA,EAAAD,CAAA,YAAOQ,EAAM4E,QAAb,MAAyB5E,EAAM6E,UAC/BrF,OAAAC,EAAA,EAAAD,CAAA,SAAIQ,EAAM8E,SAAV,MAAuB9E,EAAM+E,WAC7BvF,OAAAC,EAAA,EAAAD,CAAA,UACKQ,EAAMgF,aAAaf,IAAI,SAACjE,EAAOkE,GAAR,OACpB1E,OAAAC,EAAA,EAAAD,CAAA,MAAI6E,IAAKH,GAAQlE,UAOzCR,OAAAC,EAAA,EAAAD,CAAC4F,EAAD,CAAeG,aAAa,YACvBN,EAAShB,IAAI,SAACjE,EAAOkE,GAAR,OACV1E,OAAAC,EAAA,EAAAD,CAAC2E,EAAAvE,EAAMwE,SAAP,CAAgBC,IAAKH,GACjB1E,OAAAC,EAAA,EAAAD,CAAA,YAAOQ,EAAMkF,KAAb,MAAsBlF,EAAMmF,OAC5B3F,OAAAC,EAAA,EAAAD,CAAA,UACIA,OAAAC,EAAA,EAAAD,CAAA,UAAKQ,EAAMmD,kBAK3B3D,OAAAC,EAAA,EAAAD,CAAA,KACIgE,KAAK,yDACLpE,IAAKA,YAAF2G,MAeHvG,OAAAC,EAAA,EAAAD,CAAA,KAAG0D,MAAM,sJCpJzB,IAAMP,EAAYvD,YAAH4G,KAuBAC,MAjBf,WAEE,OACEzG,OAAAC,EAAA,EAAAD,CAAA,OAAKJ,IAAKuD,GACRnD,OAAAC,EAAA,EAAAD,CAAC0G,EAAD,KACE1G,OAAAC,EAAA,EAAAD,CAACmE,EAAA,EAAD,CAAYwC,SAAS,KACnB3G,OAAAC,EAAA,EAAAD,CAAC4G,EAAA,EAAD,KACE5G,OAAAC,EAAA,EAAAD,CAAC4G,EAAA,EAAD,CAAUC,OAAK,EAACC,KAAK,IAAIzC,GAAG,SAC5BrE,OAAAC,EAAA,EAAAD,CAAC4G,EAAA,EAAD,CAAOG,KAAK,QAAQC,UAAWzC,IAC/BvE,OAAAC,EAAA,EAAAD,CAAC4G,EAAA,EAAD,CAAOG,KAAK,UAAUC,UAAWhB,SCZzBiB,QACW,cAA7BC,OAAO7B,SAAS8B,UAEe,UAA7BD,OAAO7B,SAAS8B,UAEhBD,OAAO7B,SAAS8B,SAASC,MACvB,2DCZNC,IAASC,OAAO3C,EAAAvE,EAAAmH,cAACC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.79d166d8.chunk.js","sourcesContent":["/** @jsx jsx */\r\nimport Particles from 'react-particles-js';\r\n\r\nimport { css, jsx } from '@emotion/core';\r\n\r\nconst canvasStyle = css`\r\n    position:fixed !important;\r\n    left:0;\r\n    top:0;\r\n    width:100%;\r\n    height:100vh;\r\n    z-index: 0;\r\n`;\r\n\r\nfunction ParticlesContainer(props) {\r\n    return(\r\n        <div css={css`background: black;`}>\r\n            <Particles\r\n                css={canvasStyle}\r\n                params={{\r\n                    \"particles\": {\r\n                        \"number\": {\r\n                            \"value\": 80,\r\n                            \"density\": {\r\n                                \"enable\": true,\r\n                                \"value_area\": 800\r\n                            }\r\n                        },\r\n                        \"color\": {\r\n                            \"value\": \"#ffffff\"\r\n                        },\r\n                        \"shape\": {\r\n                            \"type\": \"circle\",\r\n                            \"stroke\": {\r\n                                \"width\": 0,\r\n                                \"color\": \"#000000\"\r\n                            },\r\n                            \"polygon\": {\r\n                                \"nb_sides\": 5\r\n                            },\r\n                        },\r\n                        \"opacity\": {\r\n                            \"value\": 0.5,\r\n                            \"random\": false,\r\n                            \"anim\": {\r\n                                \"enable\": false,\r\n                                \"speed\": 1,\r\n                                \"opacity_min\": 0.1,\r\n                                \"sync\": false\r\n                            }\r\n                        },\r\n                        \"size\": {\r\n                            \"value\": 1,\r\n                            \"random\": true,\r\n                            \"anim\": {\r\n                                \"enable\": false,\r\n                                \"speed\": 10,\r\n                                \"size_min\": 0.1,\r\n                                \"sync\": false\r\n                            }\r\n                        },\r\n                        \"line_linked\": {\r\n                            \"enable\": true,\r\n                            \"distance\": 90,\r\n                            \"color\": \"#ffffff\",\r\n                            \"opacity\": 0.4,\r\n                            \"width\": 1\r\n                        },\r\n                        \"move\": {\r\n                            \"enable\": true,\r\n                            \"speed\": 4,\r\n                            \"direction\": \"none\",\r\n                            \"random\": true,\r\n                            \"straight\": false,\r\n                            \"out_mode\": \"out\",\r\n                            \"bounce\": false,\r\n                            \"attract\": {\r\n                                \"enable\": false,\r\n                                \"rotateX\": 600,\r\n                                \"rotateY\": 1200\r\n                            }\r\n                        }\r\n                    },\r\n                    \"interactivity\": {\r\n                        \"detect_on\": \"canvas\",\r\n                        \"events\": {\r\n                            \"onhover\": {\r\n                                \"enable\": true,\r\n                                \"mode\": \"repulse\"\r\n                            },\r\n                            \"resize\": true\r\n                        },\r\n                        \"modes\": {\r\n                            \"repulse\": {\r\n                                \"distance\": 100,\r\n                                \"duration\": 0.4\r\n                            },\r\n                            \"push\": {\r\n                                \"particles_nb\": 4\r\n                            },\r\n                            \"remove\": {\r\n                                \"particles_nb\": 2\r\n                            }\r\n                        }\r\n                    },\r\n                    \"retina_detect\": true\r\n                }}\r\n            />\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ParticlesContainer;","/** @jsx jsx */\r\nimport React from 'react';\r\nimport { css, jsx } from '@emotion/core';\r\n\r\nimport { Link } from 'react-router-dom';\r\nconst rootStyle = css`\r\n    color: white;\r\n    font-family: 'Roboto', sans-serif !important;\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100vh;\r\n    width: 100%;\r\n    text-align: center;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst parentLinksStyle = css`\r\n    margin-top: 10px;\r\n    font-size: 30px;\r\n    display: flex;\r\n    justify-content: center;\r\n    z-index: 1;\r\n    position: relative;\r\n`;\r\n\r\nconst linkStyle = css`\r\n    display: flex;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n    flex-direction: column;\r\n    cursor: pointer !important;\r\n`;\r\n\r\nconst content = [{\r\n    class: 'fab fa-github',\r\n    description: 'github',\r\n    link: 'https://github.com/mhandria'\r\n}, {\r\n    class:'fab fa-linkedin-in',\r\n    description: 'linkedin',\r\n    link: 'https://www.linkedin.com/in/michael-handria/'\r\n}, {\r\n    class: 'far fa-file',\r\n    description: 'resume',\r\n    link: ''\r\n}];\r\n\r\nconst getLinkList = (icons) => {\r\n    if(icons.link !== '') {\r\n        return(\r\n            <a\r\n                css={css`\r\n                    text-decoration: none;\r\n                    color: white;\r\n                `} \r\n                href={icons.link}>\r\n                <div css={linkStyle}>\r\n                    <i className={icons.class}></i>\r\n                    <span css={css`font-size: 12px;`}>{icons.description}</span>\r\n                </div>\r\n            </a>\r\n        );\r\n    } else {\r\n        return(\r\n            <Link\r\n                css={css`\r\n                    text-decoration: none;\r\n                    color: white;\r\n                `}  \r\n                to=\"/resume\">\r\n                <div css={linkStyle}>\r\n                    <i className={icons.class}></i>\r\n                    <span css={css`font-size: 12px;`}>{icons.description}</span>\r\n                </div>\r\n            </Link>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nfunction Home() {\r\n    let links = content.map((value, index) => (\r\n        <React.Fragment key={index}>\r\n            {getLinkList(value)}\r\n        </React.Fragment>\r\n    ));\r\n\r\n    return (\r\n        <div css={rootStyle}>\r\n            <span css={css`font-size: 12px;`}>keep it simple &amp; clean</span>\r\n            <h1 css={css`margin: 0;`}>Michael Handria</h1>\r\n            <div css={parentLinksStyle}>\r\n                {links.map((value) => value)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","/** @jsx jsx */\r\nimport React from 'react';\r\nimport { css, jsx } from '@emotion/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst rootStyle = css`\r\n    display: flex;\r\n    flex-direction: column;\r\n    color: white;\r\n    font-family: 'Roboto';\r\n    padding: 20px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: relative;\r\n    z-index: 2;\r\n    padding-bottom: 40px;\r\n`;\r\n\r\nconst backStyle = css`\r\n    color: white;\r\n    text-decoration: none;\r\n    flex: 1;\r\n    position: relative;\r\n    z-index: 1;\r\n    padding: 10px;\r\n`;\r\n\r\nconst experience = [{\r\n    company: 'Activision Blizzard',\r\n    location: 'Irvine, CA',\r\n    position: 'Associate Software Engineer',\r\n    workDates: 'June 2018 - Present',\r\n    achievements: [\r\n        'built an application that will automatically render a graph view given the nodes and transitions of each state (used to debug automated system workflow)',\r\n        'maintained and built new UI for application that Customer Service representative would use for game support',\r\n        'built and maintain data pipelines and systems that would help combat against game toxicity',\r\n        'built an application that allowed C.S reps to annotate different chat data in order to provide new data to the A.I model',\r\n        'worked with Flink and Kafka for real time data stream and Spark for data batch jobs',\r\n        'help maintained regular timed jobs through airflow',\r\n        'worked with big data and hadoop'\r\n    ]\r\n}, {\r\n    company: 'The Walt Disney Company',\r\n    location: 'Orlando, FL',\r\n    position: 'Software Engineer Intern',\r\n    workDates: 'May 2017 - Aug 2017',\r\n    achievements: [\r\n        'maintained an existing desktop application that extracted data from SOAP protocol and XML driven backend',\r\n        'maintained existing android application developed in XAMARIN',\r\n        'implemented new table features and pages, as well as updated existing UI/UX to give a more \"materialize\" feeling for both the desktop and mobile application',\r\n        'optimize desktop and mobiel application by implementing asynchronous network calls to request thousands of high quality blueprint drawing and modularizing repetitive logic in source code',\r\n        'develop a new web application done through Angular (front-end), with .Net Core, SQL Server and IIS (backend), as well as utilizing different libraries and concepts such as jQuery, AJAX, JSON, NOde.js and bootstrap'\r\n    ]\r\n}, {\r\n    company: 'The Boeing Company',\r\n    location: 'Long Beach, CA',\r\n    position: 'Software Engineer Intern',\r\n    workDates: 'Feb 2017 - May 2017',\r\n    achievements: [\r\n        'developed threaded functionalities to monitor robotic arm movements in order to determine which motors to turn on and off',\r\n        'made test cases to debug and optimize \"rotation detection\" functionalities',\r\n        'implemented software interrupts that would be utilized to determine when to spin a thread that will drive different motors on the robotic arm',\r\n        'set up local GIT server on an Ubuntu server protected by RSA-encryption'\r\n    ]\r\n}];\r\n\r\nconst projects = [{\r\n    name: 'Smart Home Audio',\r\n    stack: 'Android | Java | Python',\r\n    description: `\r\n        A system that includes a mobile device (w/ app), local server, and speakers, supposed to provide its user with the experienceof surround sound.  \r\n        As the user moves around his/her house, the speakers will adjust their volumes based on the user’s current location \r\n    `\r\n}, {\r\n    name: 'Smiish',\r\n    stack: 'iOS | Swift | Node.js | Socket.io | Express | AWS EC2',\r\n    description: `\r\n        A simple chatting application that is made for iOS.  This application utilizes socket protocols and communicationhosted on an amazon Ubuntu Server EC2 instance.  \r\n        The users can create rooms and use nicknames to chat with one another.\r\n    `\r\n}]\r\n\r\nfunction ResumeSection(props) { \r\n    return(\r\n        <div css={css`width:100%; display: flex; flex-direction: column;`}>\r\n            <h3 css={css`font-weight: 100; color: #FF6666;`}>\r\n                    {props.sectionTitle}\r\n            </h3>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Resume(props) {\r\n    return(\r\n        <div css={rootStyle}>\r\n            <div css={css`display: flex; width: 100%; align-items: center;`}>\r\n                <Link to=\"/home\" css={backStyle}>\r\n                    <i className=\"fas fa-arrow-left\"></i>\r\n                </Link>\r\n                    \r\n                <div css={css`display: flex; align-items: center; flex-direction: column;`}>\r\n                    <h3 css={css`margin: 0; font-weight: 100;`}>\r\n                        Michael <b>Handria</b>\r\n                    </h3>\r\n                    <span><i css={css`color: #FF6666;`}>Software Engineer</i> - Computer Engineer</span>\r\n                </div>\r\n                <div css={css`flex: 1;`}></div>\r\n            </div>     \r\n            <ResumeSection sectionTitle=\"Education\">\r\n                    <h4 css={css`margin:0;`}>California State University, Long Beach (CSULB) - Graduated May 2018</h4>\r\n                    <span>B.S Computer Engineer &amp; Computer Science <b>|</b> <i>(Cummulative)</i> GPA: 3.65 <b>|</b> <i>(Major)</i> GPA: 3.8 </span>\r\n                    <ul>\r\n                        <li>President's Honor List &amp; Dean's Honor List </li>\r\n                    </ul>\r\n            </ResumeSection>\r\n            <ResumeSection sectionTitle=\"Expereince\">\r\n                {experience.map((value, index) => (\r\n                        <React.Fragment key={index}>\r\n                            <span>{value.company} - {value.location}</span>\r\n                            <i>{value.position} - {value.workDates}</i>\r\n                            <ul>\r\n                                {value.achievements.map((value, index) => (\r\n                                    <li key={index}>{value}</li>\r\n                                ))}\r\n                            </ul>\r\n                        </React.Fragment>\r\n                    )\r\n                )}\r\n            </ResumeSection>\r\n            <ResumeSection sectionTitle=\"Projects\">\r\n                {projects.map((value, index) => (\r\n                    <React.Fragment key={index}>\r\n                        <span>{value.name} - {value.stack}</span>\r\n                        <ul>\r\n                            <li>{value.description}</li>\r\n                        </ul>\r\n                    </React.Fragment>\r\n                ))}\r\n            </ResumeSection>\r\n            <a\r\n                href=\"https://app.box.com/s/qtg8n3bd2c4dy2h32syz3zzhpxdoh9lz\"\r\n                css={css`\r\n                    color: white;\r\n                    text-decoration: none;\r\n                    position: fixed;\r\n                    bottom: 30px;\r\n                    right: 10px;\r\n                    border-radius: 100px;\r\n                    border: 1px solid white;\r\n                    padding: 10px;\r\n                    z-index: 2;\r\n                    cursor: pointer;\r\n                    @media(max-width: 414px){\r\n                        bottom: 10px;\r\n                    }\r\n                `}>\r\n                <i class=\"fas fa-download\"></i>\r\n            </a>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Resume;","\r\n/** @jsx jsx */\r\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom';\r\nimport ParticlesContainer from './ParticlesContainer';\r\nimport Home from './Home';\r\nimport Resume from './Resume';\r\n\r\nimport {css, jsx} from '@emotion/core';\r\n\r\nconst rootStyle = css`\r\n  background: black;\r\n  width: 100%;\r\n  height: 100vh;\r\n`;\r\n\r\nfunction App() {\r\n  \r\n  return (\r\n    <div css={rootStyle}>\r\n      <ParticlesContainer>\r\n        <HashRouter basename=\"/\">\r\n          <Switch>\r\n            <Redirect exact from=\"/\" to=\"home\" />\r\n            <Route path=\"/home\" component={Home} />\r\n            <Route path=\"/resume\" component={Resume} />\r\n          </Switch>\r\n        </HashRouter>\r\n      </ParticlesContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}